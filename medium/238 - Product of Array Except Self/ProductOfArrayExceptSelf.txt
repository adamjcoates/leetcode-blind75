https://leetcode.com/problems/product-of-array-except-self/

Problem:
  Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

  The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

  You must write an algorithm that runs in O(n) time and without using the division operation.

Examples:
  Example 1:
  Input: nums = [1,2,3,4]
  Output: [24,12,8,6]

  Example 2:
  Input: nums = [-1,1,0,-3,3]
  Output: [0,0,9,0,0]
 
Constraints:
  2 <= nums.length <= 105
  -30 <= nums[i] <= 30
  The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

Pattern(s): Array

Parameter(s): int[] nums

Algorithm:
  Initialize prefix and postfix to an initial value of 1
  Initialize a result array the same length as the input array

  Loop through input array
    Set the value at the same index of the result array to the value of prefix
    Multiply prefix by the current value of the input array

  Loop through the input array right to left this time
    Multiply the value at the same index of the result array by the value of postfix
    Multiply postfix by the current value of the input array

  Return the result array

Code:
  class Solution {
      public int[] productExceptSelf(int[] nums) {
          int[] result = new int[nums.length];
          int prefix = 1, postfix = 1;
          
          for (int i = 0; i < nums.length; i++) {
              result[i] = prefix;
              prefix *= nums[i];
          }
          
          for (int i = nums.length - 1; i >= 0; i--) {
              result[i] *= postfix;
              postfix *= nums[i];
          }
          
          return result;
      }
  }

Complexity Analysis:
  Time: O(n)
  Space: O(1) - if you do not count the extra space of the output array