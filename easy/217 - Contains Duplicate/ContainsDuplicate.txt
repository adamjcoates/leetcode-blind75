https://leetcode.com/problems/contains-duplicate/

Problem:
  Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

Examples:
  Example 1:
  Input: nums = [1,2,3,1]
  Output: true

  Example 2:
  Input: nums = [1,2,3,4]
  Output: false

  Example 3:
  Input: nums = [1,1,1,3,3,4,3,2,4,2]
  Output: true
 

Constraints:
  1 <= nums.length <= 105
  -109 <= nums[i] <= 109

Pattern(s): Array, Set

Parameter(s): int[] nums

Algorithm:
  Initialize a HashSet of integers

  Loop through input array
    If the set contains the current element, return true

    Add the current element to the set

  Return false if we get here

Code:
  class Solution {
      public boolean containsDuplicate(int[] nums) {
          if (nums == null) throw new IllegalArgumentException("Input array is null");
          
          HashSet<Integer> set = new HashSet<>();
          
          for (int i = 0; i < nums.length; i++) {
              if (set.contains(nums[i])) return true;
              
              set.add(nums[i]);
          }
          
          return false;
      }
  }

Complexity Analysis:
  Time: O(n)
  Space: O(n)